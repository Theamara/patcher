<?xml version="1.0" encoding="utf-8"?>
<type name="Gmst" fullname="Forms.Fallout4.Gmst" category="Forms (Fallout4)" gametitle="Fallout4">
  <summary>
            Represents a <b>Game Setting</b> form.
            </summary>
  <property name="EditorId" gametitle="">
    <signature>
      <c>string</c> EditorId</signature>
    <summary>
            Gets or sets the Editor ID associated with this form.
            </summary>
  </property>
  <property name="FormId" gametitle="">
    <signature>
      <c>uint</c> FormId</signature>
    <summary>
            Gets the Form ID associated with this form.
            </summary>
  </property>
  <property name="Type" gametitle="Fallout4">
    <signature>
      <see cref="Constants.Types" /> Type</signature>
    <summary>
            Gets the type of this <b>Game Setting</b>.
            </summary>
  </property>
  <property name="Value" gametitle="Fallout4">
    <signature>
      <c>object</c> Value</signature>
    <summary>
            Gets or sets the value of this <b>Game Setting</b>.
            </summary>
  </property>
  <method name="HasTag" extension="false" gametitle="">
    <signature>
      <c>bool</c> HasTag(<c>string</c>)</signature>
    <summary>
            Determines whether this form has been tagged with the specified text.
            </summary>
  </method>
  <method name="Tag" extension="false" gametitle="">
    <signature>
      <c>void</c> Tag(<c>string</c>)</signature>
    <summary>
            Tags this form with the specified text.
            </summary>
  </method>
  <remarks>
    <p>
            The type of value is inferred from the first letter of the Editor ID that is assigned to the form. 
            For this reason when creating a new <b>Game Setting</b> form it in necessary to set Editor ID first 
            (with the appropriate first letter) so that the type is known when the value is set.
            </p>
    <p>
            Value should be set to a value of the correct type as specified by property <code>Type</code>. 
            The engine will try to convert the value if necessary to avoid run-time errors 
            but large numbers may get truncated or precision may get lost if the type cannot sustain the value.
            </p>
  </remarks>
</type>