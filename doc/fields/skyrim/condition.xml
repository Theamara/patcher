<?xml version="1.0" encoding="utf-8"?>
<type name="Condition" fullname="Fields.Skyrim.Condition" category="Fields">
  <summary>
            Represents a function with parameters, operand, operator used to compare the result of the function with the specified operand 
            and information on which object the function will be run.
            </summary>
  <method name="AndNext" extension="false">
    <signature>
      <see cref="Fields.Skyrim.Condition" /> AndNext()</signature>
    <summary>
            Indicates that logical <code>and</code> operation will be performed between this and the consecutive condition when the <see cref="Fields.Skyrim.ConditionCollection" /> is evaluated.
            </summary>
  </method>
  <method name="IsEqualTo" extension="false">
    <signature>
      <see cref="Fields.Skyrim.Condition" /> IsEqualTo(<c>float</c>)</signature>
    <summary>
            Sets the operator to <code>==</code> and the operand to the specified value.
            </summary>
  </method>
  <method name="IsEqualTo" extension="false">
    <signature>
      <see cref="Fields.Skyrim.Condition" /> IsEqualTo(<see cref="Forms.Form" />)</signature>
    <summary>
            Sets the operator to <code>==</code> and the operand to the specified <b>Global Variable</b>.
            </summary>
  </method>
  <method name="IsFalse" extension="false">
    <signature>
      <see cref="Fields.Skyrim.Condition" /> IsFalse()</signature>
    <summary>
            Sets the operator to <code>!=</code> and the operand to <code>1</code>.
            </summary>
  </method>
  <method name="IsGreaterThan" extension="false">
    <signature>
      <see cref="Fields.Skyrim.Condition" /> IsGreaterThan(<c>float</c>)</signature>
    <summary>
            Sets the operator to <code>&gt;</code> and the operand to the specified value.
            </summary>
  </method>
  <method name="IsGreaterThan" extension="false">
    <signature>
      <see cref="Fields.Skyrim.Condition" /> IsGreaterThan(<see cref="Forms.Form" />)</signature>
    <summary>
            Sets the operator to <code>&gt;</code> and the operand to the specified <b>Global Variable</b>.
            </summary>
  </method>
  <method name="IsGreaterThanOrEqualTo" extension="false">
    <signature>
      <see cref="Fields.Skyrim.Condition" /> IsGreaterThanOrEqualTo(<c>float</c>)</signature>
    <summary>
            Sets the operator to <code>&gt;=</code> and the operand to the specified value.
            </summary>
  </method>
  <method name="IsGreaterThanOrEqualTo" extension="false">
    <signature>
      <see cref="Fields.Skyrim.Condition" /> IsGreaterThanOrEqualTo(<see cref="Forms.Form" />)</signature>
    <summary>
            Sets the operator to <code>&gt;=</code> and the operand to the specified <b>Global Variable</b>.
            </summary>
  </method>
  <method name="IsLessThen" extension="false">
    <signature>
      <see cref="Fields.Skyrim.Condition" /> IsLessThen(<c>float</c>)</signature>
    <summary>
            Sets the operator to <code>&lt;</code> and the operand to the specified value.
            </summary>
  </method>
  <method name="IsLessThen" extension="false">
    <signature>
      <see cref="Fields.Skyrim.Condition" /> IsLessThen(<see cref="Forms.Form" />)</signature>
    <summary>
            Sets the operator to <code>&lt;</code> and the operand to the specified <b>Global Variable</b>.
            </summary>
  </method>
  <method name="IsLessThenOrEqualTo" extension="false">
    <signature>
      <see cref="Fields.Skyrim.Condition" /> IsLessThenOrEqualTo(<c>float</c>)</signature>
    <summary>
            Sets the operator to <code>&lt;=</code> and the operand to the specified value.
            </summary>
  </method>
  <method name="IsLessThenOrEqualTo" extension="false">
    <signature>
      <see cref="Fields.Skyrim.Condition" /> IsLessThenOrEqualTo(<see cref="Forms.Form" />)</signature>
    <summary>
            Sets the operator to <code>&lt;=</code> and the operand to the specified <b>Global Variable</b>.
            </summary>
  </method>
  <method name="IsNotEqualTo" extension="false">
    <signature>
      <see cref="Fields.Skyrim.Condition" /> IsNotEqualTo(<c>float</c>)</signature>
    <summary>
            Sets the operator to <code>!=</code> and the operand to the specified value.
            </summary>
  </method>
  <method name="IsNotEqualTo" extension="false">
    <signature>
      <see cref="Fields.Skyrim.Condition" /> IsNotEqualTo(<see cref="Forms.Form" />)</signature>
    <summary>
            Sets the operator to <code>!=</code> and the operand to the specified <b>Global Variable</b>.
            </summary>
  </method>
  <method name="IsTrue" extension="false">
    <signature>
      <see cref="Fields.Skyrim.Condition" /> IsTrue()</signature>
    <summary>
            Sets the operator to <code>==</code> and the operand to <code>1</code>.
            </summary>
  </method>
  <method name="OrNext" extension="false">
    <signature>
      <see cref="Fields.Skyrim.Condition" /> OrNext()</signature>
    <summary>
            Indicates that logical <code>or</code> operation will be performed between this and the consecutive condition when the <see cref="Fields.Skyrim.ConditionCollection" /> is evaluated.
            </summary>
  </method>
  <method name="RunOn" extension="false">
    <signature>
      <see cref="Fields.Skyrim.Condition" /> RunOn(<see cref="Forms.Form" />)</signature>
    <summary>
            Causes the function to run on the specified form reference.
            </summary>
  </method>
  <method name="RunOnCombatTarget" extension="false">
    <signature>
      <see cref="Fields.Skyrim.Condition" /> RunOnCombatTarget()</signature>
    <summary>
            Causes the function to run on the current combat target.
            </summary>
  </method>
  <method name="RunOnPlayer" extension="false">
    <signature>
      <see cref="Fields.Skyrim.Condition" /> RunOnPlayer()</signature>
    <summary>
            Causes the function to run on the player character.
            </summary>
  </method>
  <method name="RunOnSubject" extension="false">
    <signature>
      <see cref="Fields.Skyrim.Condition" /> RunOnSubject()</signature>
    <summary>
            Causes the function to run on the subject. This is the default behavior.
            </summary>
  </method>
  <method name="RunOnTarget" extension="false">
    <signature>
      <see cref="Fields.Skyrim.Condition" /> RunOnTarget()</signature>
    <summary>
            Causes the function to run on the target.
            </summary>
  </method>
  <method name="SwapSubjectAndTarget" extension="false">
    <signature>
      <see cref="Fields.Skyrim.Condition" /> SwapSubjectAndTarget()</signature>
    <summary>
            Causes this condition to swap the subject and the target before it is evaluated.
            </summary>
  </method>
  <remarks>
    <p>
            When a condition is created with any of the <see cref="Helpers.Skyrim.Functions" /> helper methods its default state is as if the following methods where used: 
            <code>RunOnSubject()</code>, <code>IsEqualTo(0)</code> and <code>AndNext()</code>. 
            Calling these methods on a new conditions will have no effect however these methods can still be used to modify an existing conditions.
            </p>
    <p>
            Method <code>RunOnPlayer()</code> is equivalent to <code>RunOn(Forms.Find(0x14))</code> 
            however many functions will run on the player reference by default as the player is often the subject. 
            </p>
    <p>
            Methods can be used in any order and when multiple methods that change the same aspect are called the changes made by the last method will be kept.
            </p>
    <p>
            Methods can be chained together into a single statement in a fluent interface fashion.
            </p>
  </remarks>
</type>